"use strict";
var Promise = require('bluebird');
var async = require('async');
var modbus_eastron_1 = require("modbus-eastron");
function ModEastronKernel(devices) {
    return new Promise(function (resolve, reject) {
        if (devices && devices.length && devices[0] && devices[0].id) {
            var answer_1 = [];
            async.eachSeries(devices, function (device) {
                modbus_eastron_1.default(device).then(function (a) {
                    answer_1.push(a);
                }).catch(function (err) {
                    console.error(err);
                });
            }, function (err) {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        }
        else {
            reject('wrong data conf for modbus multiple eastron');
        }
    });
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ModEastronKernel;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFZLE9BQU8sV0FBTSxVQUFVLENBQUMsQ0FBQTtBQUNwQyxJQUFZLEtBQUssV0FBTSxPQUFPLENBQUMsQ0FBQTtBQUMvQiwrQkFBdUIsZ0JBR3ZCLENBQUMsQ0FIc0M7QUFldkMsMEJBQXlDLE9BQXdCO0lBRTdELE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1FBRS9CLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUUzRCxJQUFNLFFBQU0sR0FBRyxFQUFFLENBQUM7WUFFbEIsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsVUFBQyxNQUFNO2dCQUU3Qix3QkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUM7b0JBQ3RCLFFBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7Z0JBQ2xCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFDLEdBQUc7b0JBQ1QsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtnQkFDdEIsQ0FBQyxDQUFDLENBQUE7WUFFTixDQUFDLEVBQUUsVUFBQyxHQUFHO2dCQUVILEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ04sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO2dCQUVmLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ0osT0FBTyxFQUFFLENBQUE7Z0JBQ2IsQ0FBQztZQUVMLENBQUMsQ0FBQyxDQUFBO1FBRU4sQ0FBQztRQUFDLElBQUksQ0FBQyxDQUFDO1lBQ0osTUFBTSxDQUFDLDZDQUE2QyxDQUFDLENBQUE7UUFDekQsQ0FBQztJQUVMLENBQUMsQ0FBQyxDQUFBO0FBRU4sQ0FBQztBQWpDRDtrQ0FpQ0MsQ0FBQSIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnO1xuaW1wb3J0ICogYXMgYXN5bmMgZnJvbSAnYXN5bmMnO1xuaW1wb3J0IE1vZEVhc3Ryb24gZnJvbSBcIm1vZGJ1cy1lYXN0cm9uXCJcblxuXG5pbnRlcmZhY2UgRWFzdHJvbkRldmljZSB7XG4gICAgZGV2Pzogc3RyaW5nO1xuICAgIGh1Yj86IHN0cmluZztcbiAgICBiYXVkOiBudW1iZXI7XG4gICAgaWQ6IG51bWJlcjtcbiAgICB1aWQ/OiBzdHJpbmc7XG4gICAgbW9kZWw6IHN0cmluZztcbiAgICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gICAgZGlyZWN0aW9uOiBzdHJpbmc7XG59XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTW9kRWFzdHJvbktlcm5lbChkZXZpY2VzOiBFYXN0cm9uRGV2aWNlW10pIHtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG5cbiAgICAgICAgaWYgKGRldmljZXMgJiYgZGV2aWNlcy5sZW5ndGggJiYgZGV2aWNlc1swXSAmJiBkZXZpY2VzWzBdLmlkKSB7XG5cbiAgICAgICAgICAgIGNvbnN0IGFuc3dlciA9IFtdO1xuXG4gICAgICAgICAgICBhc3luYy5lYWNoU2VyaWVzKGRldmljZXMsIChkZXZpY2UpID0+IHtcblxuICAgICAgICAgICAgICAgIE1vZEVhc3Ryb24oZGV2aWNlKS50aGVuKChhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGFuc3dlci5wdXNoKGEpXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycilcbiAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICB9LCAoZXJyKSA9PiB7XG5cbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpXG5cbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKClcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlamVjdCgnd3JvbmcgZGF0YSBjb25mIGZvciBtb2RidXMgbXVsdGlwbGUgZWFzdHJvbicpXG4gICAgICAgIH1cblxuICAgIH0pXG5cbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
