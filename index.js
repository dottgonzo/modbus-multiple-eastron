"use strict";
var Promise = require('bluebird');
var async = require('async');
var modbus_eastron_1 = require("modbus-eastron");
function ModMultiEastron(devices) {
    return new Promise(function (resolve, reject) {
        if (devices && devices.length && devices[0] && devices[0].id) {
            var answer_1 = [];
            async.eachSeries(devices, function (device) {
                modbus_eastron_1.default(device).then(function (a) {
                    answer_1.push(a);
                }).catch(function (err) {
                    console.error(err);
                });
            }, function (err) {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(answer_1);
                }
            });
        }
        else {
            reject('wrong data conf for modbus multiple eastron');
        }
    });
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ModMultiEastron;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFZLE9BQU8sV0FBTSxVQUFVLENBQUMsQ0FBQTtBQUNwQyxJQUFZLEtBQUssV0FBTSxPQUFPLENBQUMsQ0FBQTtBQUMvQiwrQkFBdUIsZ0JBR3ZCLENBQUMsQ0FIc0M7QUFldkMseUJBQXdDLE9BQXdCO0lBRTVELE1BQU0sQ0FBQyxJQUFJLE9BQU8sQ0FBQyxVQUFDLE9BQU8sRUFBRSxNQUFNO1FBRS9CLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUUzRCxJQUFNLFFBQU0sR0FBRyxFQUFFLENBQUM7WUFFbEIsS0FBSyxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsVUFBQyxNQUFNO2dCQUU3Qix3QkFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFDLENBQUM7b0JBQ3RCLFFBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUE7Z0JBQ2xCLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFDLEdBQUc7b0JBQ1QsT0FBTyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQTtnQkFDdEIsQ0FBQyxDQUFDLENBQUE7WUFFTixDQUFDLEVBQUUsVUFBQyxHQUFHO2dCQUVILEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7b0JBQ04sTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO2dCQUVmLENBQUM7Z0JBQUMsSUFBSSxDQUFDLENBQUM7b0JBQ0osT0FBTyxDQUFDLFFBQU0sQ0FBQyxDQUFBO2dCQUNuQixDQUFDO1lBRUwsQ0FBQyxDQUFDLENBQUE7UUFFTixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDSixNQUFNLENBQUMsNkNBQTZDLENBQUMsQ0FBQTtRQUN6RCxDQUFDO0lBRUwsQ0FBQyxDQUFDLENBQUE7QUFFTixDQUFDO0FBakNEO2lDQWlDQyxDQUFBIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUHJvbWlzZSBmcm9tICdibHVlYmlyZCc7XG5pbXBvcnQgKiBhcyBhc3luYyBmcm9tICdhc3luYyc7XG5pbXBvcnQgTW9kRWFzdHJvbiBmcm9tIFwibW9kYnVzLWVhc3Ryb25cIlxuXG5cbmludGVyZmFjZSBFYXN0cm9uRGV2aWNlIHtcbiAgICBkZXY/OiBzdHJpbmc7XG4gICAgaHViPzogc3RyaW5nO1xuICAgIGJhdWQ6IG51bWJlcjtcbiAgICBpZDogbnVtYmVyO1xuICAgIHVpZD86IHN0cmluZztcbiAgICBtb2RlbDogc3RyaW5nO1xuICAgIGNsYXNzTmFtZT86IHN0cmluZztcbiAgICBkaXJlY3Rpb246IHN0cmluZztcbn1cblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNb2RNdWx0aUVhc3Ryb24oZGV2aWNlczogRWFzdHJvbkRldmljZVtdKSB7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXG4gICAgICAgIGlmIChkZXZpY2VzICYmIGRldmljZXMubGVuZ3RoICYmIGRldmljZXNbMF0gJiYgZGV2aWNlc1swXS5pZCkge1xuXG4gICAgICAgICAgICBjb25zdCBhbnN3ZXIgPSBbXTtcblxuICAgICAgICAgICAgYXN5bmMuZWFjaFNlcmllcyhkZXZpY2VzLCAoZGV2aWNlKSA9PiB7XG5cbiAgICAgICAgICAgICAgICBNb2RFYXN0cm9uKGRldmljZSkudGhlbigoYSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBhbnN3ZXIucHVzaChhKVxuICAgICAgICAgICAgICAgIH0pLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpXG4gICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgfSwgKGVycikgPT4ge1xuXG4gICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKVxuXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShhbnN3ZXIpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9KVxuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZWplY3QoJ3dyb25nIGRhdGEgY29uZiBmb3IgbW9kYnVzIG11bHRpcGxlIGVhc3Ryb24nKVxuICAgICAgICB9XG5cbiAgICB9KVxuXG59Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
